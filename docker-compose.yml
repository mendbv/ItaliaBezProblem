# docker-compose.yml

version: '3.8'

services:
  # Сервис базы данных PostgreSQL
  db:
    image: postgres:15-alpine # Используем официальный образ PostgreSQL
    volumes:
      - postgres_data:/var/lib/postgresql/data/ # Сохраняем данные БД в volume
    environment:
      POSTGRES_DB: italia_bez_problem_db # Имя базы данных
      POSTGRES_USER: user # Пользователь БД
      POSTGRES_PASSWORD: password # Пароль пользователя БД
    restart: always # Всегда перезапускать контейнер, если он падает

  # Сервис веб-приложения Django
  web:
    build: . # Собираем образ из текущей директории (используя Dockerfile)
    command: gunicorn italia_bez_problem.wsgi:application --bind 0.0.0.0:8000 # Команда для запуска Django через Gunicorn
    volumes:
      - .:/app # Монтируем текущую директорию проекта в /app внутри контейнера
      - media_volume:/app/media # Монтируем volume для пользовательских медиафайлов
    ports:
      - "8000:8000" # Пробрасываем порт 8000 контейнера на порт 8000 хоста
    depends_on:
      - db # Указываем зависимость от сервиса 'db' (запускать 'db' сначала)
    environment:
      DATABASE_URL: postgres://user:password@db:5432/italia_bez_problem_db # Переменная окружения для подключения к БД
      DJANGO_SETTINGS_MODULE: italia_bez_problem.settings # Указываем файл настроек Django
      SECRET_KEY: your_super_secret_key_here # !!! ОБЯЗАТЕЛЬНО ЗАМЕНИТЕ НА СЛОЖНЫЙ КЛЮЧ В ПРОДАКШЕНЕ !!!
      DEBUG: "True" # Установите "False" для продакшена
    restart: always # Всегда перезапускать контейнер, если он падает

# Определяем volumes для сохранения данных
volumes:
  postgres_data: # Volume для данных PostgreSQL
  media_volume: # Volume для пользовательских медиафайлов (фото, видео)
